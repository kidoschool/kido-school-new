{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/kido3/Desktop/Kido/kido-school-new/src/components/Map/MapUpdate.js\";\nimport React, { Component } from 'react';\nimport Maps from './Maps';\nimport $ from 'jquery';\nconst GOOGLE_API_KEY = \"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\";\nconst centersLocation = JSON.parse(localStorage.getItem(\"centres\"));\n\nclass MapUpdate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center: {\n        lat: 35.446982,\n        lng: 5.1975812\n      },\n      zoom: 1\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    let cityId = parseInt($(\"#search_filter\").val());\n    var latt = 0;\n    var long = 0;\n    $.each(centersLocation.data, function (k, v) {\n      if (v.city == cityId) {\n        latt = v.lat;\n        long = v.lng;\n        console.log(v.city);\n        return;\n      }\n    }); // console.log(centersLocation.data);\n\n    this.setState({\n      center: {\n        lat: latt,\n        lng: long\n      }\n    });\n  }\n\n  render() {\n    const center = this.state.center;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onClick: this.handleClick,\n          type: \"button\",\n          id: \"update_map\",\n          \"data-tag\": \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Maps, {\n        center: center,\n        zoom: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default MapUpdate;","map":{"version":3,"sources":["/home/kido3/Desktop/Kido/kido-school-new/src/components/Map/MapUpdate.js"],"names":["React","Component","Maps","$","GOOGLE_API_KEY","centersLocation","JSON","parse","localStorage","getItem","MapUpdate","constructor","props","state","center","lat","lng","zoom","handleClick","bind","event","cityId","parseInt","val","latt","long","each","data","k","v","city","console","log","setState","render"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,MAAMC,cAAc,GAAG,yCAAvB;AAEA,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAxB;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAC9BU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG;AAAEC,QAAAA,GAAG,EAAE,SAAP;AAAkBC,QAAAA,GAAG,EAAE;AAAvB,OADE;AAEXC,MAAAA,IAAI,EAAC;AAFM,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,QAAIC,MAAM,GAAGC,QAAQ,CAACnB,CAAC,CAAC,gBAAD,CAAD,CAAoBoB,GAApB,EAAD,CAArB;AACA,QAAIC,IAAI,GAAG,CAAX;AACA,QAAIC,IAAI,GAAG,CAAX;AACAtB,IAAAA,CAAC,CAACuB,IAAF,CAAOrB,eAAe,CAACsB,IAAvB,EAA6B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAC1C,UAAGA,CAAC,CAACC,IAAF,IAAUT,MAAb,EAAoB;AAACG,QAAAA,IAAI,GAAGK,CAAC,CAACd,GAAT;AAAaU,QAAAA,IAAI,GAAGI,CAAC,CAACb,GAAT;AAAae,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,IAAd;AAAoB;AAAQ;AAC5E,KAFD,EAJiB,CAOjB;;AACA,SAAKG,QAAL,CAAc;AACZnB,MAAAA,MAAM,EAAE;AAACC,QAAAA,GAAG,EAACS,IAAL;AAAUR,QAAAA,GAAG,EAACS;AAAd;AADI,KAAd;AAGD;;AAEDS,EAAAA,MAAM,GAAG;AACP,UAAMpB,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAA1B;AAEA,wBAAQ;AAAA,8BAEJ;AAAA,+BACE;AAAO,UAAA,OAAO,EAAE,KAAKI,WAArB;AAAkC,UAAA,IAAI,EAAC,QAAvC;AAAgD,UAAA,EAAE,EAAC,YAAnD;AAAgE,sBAAS;AAAzE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFI,eAMF,QAAC,IAAD;AAAM,QAAA,MAAM,EAAEJ,MAAd;AAAsB,QAAA,IAAI,EAAE;AAA5B;AAAA;AAAA;AAAA;AAAA,cANE;AAAA,oBAAR;AAWD;;AAtC6B;;AAyChC,eAAeJ,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport Maps from './Maps';\nimport $ from 'jquery';\n\nconst GOOGLE_API_KEY = \"AIzaSyCIJkPLyzo5XZODdhxAa_XYbk2ESQpJyZw\";\n\nconst centersLocation = JSON.parse(localStorage.getItem(\"centres\"));\n\nclass MapUpdate extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        center : { lat: 35.446982, lng: 5.1975812 },\n        zoom:1\n      };\n      this.handleClick = this.handleClick.bind(this);\n    }\n  \n    handleClick(event) {\n      let cityId = parseInt($(\"#search_filter\").val());\n      var latt = 0;\n      var long = 0;\n      $.each(centersLocation.data, function(k, v) {\n        if(v.city == cityId){latt = v.lat;long = v.lng;console.log(v.city);return;}\n      });\n      // console.log(centersLocation.data);\n      this.setState({\n        center: {lat:latt,lng:long}\n      });\n    }\n  \n    render() {\n      const center = this.state.center;\n\n      return (<>\n        {/* <div style={{ width: \"100%\", height: \"100%\" }}> */}\n          <div>\n            <input onClick={this.handleClick} type=\"button\" id=\"update_map\" data-tag=\"Update\" />\n          </div>\n        \n            <Maps center={center} zoom={8} />\n         \n        {/* </div> */}\n        </>\n      );\n    }\n  }\n  \n  export default MapUpdate;\n  \n"]},"metadata":{},"sourceType":"module"}